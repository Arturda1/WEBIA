import os
import pandas as pd
from datetime import datetime

PRODUCT_RECIPES_FILE = "data/product_recipes.xlsx"
SEMI_RECIPES_FILE = "data/semi_products_recipes.xlsx"
MATERIALS_FILE = "data/materials.xlsx"
SNAPSHOT_FOLDER = "db/snapshots"



def load_materials():
    if not os.path.exists(MATERIALS_FILE):
        print("\n‚ùóÔ∏è–§–∞–π–ª materials.xlsx –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return pd.DataFrame(columns=["–ù–∞–∑–≤–∞–Ω–∏–µ", "–ï–¥. –∏–∑–º.", "–û—Å—Ç–∞—Ç–æ–∫"])
    return pd.read_excel(MATERIALS_FILE)

def save_materials(df):
    df.to_excel(MATERIALS_FILE, index=False)

def show_stock(df):
    print("\nüì¶ –û—Å—Ç–∞—Ç–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:\n")
    for i, row in df.iterrows():
        print(f"{i+1}. {row['–ù–∞–∑–≤–∞–Ω–∏–µ']} ({row['–ï–¥. –∏–∑–º.']}): {row['–û—Å—Ç–∞—Ç–æ–∫']}")

def save_snapshot(df):
    if not os.path.exists(SNAPSHOT_FOLDER):
        os.makedirs(SNAPSHOT_FOLDER)
    now = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    path = os.path.join(SNAPSHOT_FOLDER, f"materials_snapshot_{now}.xlsx")
    df.to_excel(path, index=False)
    print(f"\n‚úÖ –°–Ω–∞–ø—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {path}")

def add_material(df):
    diffs = []

    print("\n–í–≤–µ–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: +10, -5), –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.")

    for i, row in df.iterrows():
        val = input(f"{i+1}. {row['–ù–∞–∑–≤–∞–Ω–∏–µ']} ({row['–ï–¥. –∏–∑–º.']}): ").strip()
        if val == "":
            diffs.append(0)
            continue
        try:
            diffs.append(float(val))
        except:
            diffs.append(0)

    while True:
        print("\n‚Äî‚Äî‚Äî –ò–¢–û–ì ‚Äî‚Äî‚Äî")
        for i, row in df.iterrows():
            delta = diffs[i]
            final = row["–û—Å—Ç–∞—Ç–æ–∫"] + delta
            print(f"{i+1}. {row['–ù–∞–∑–≤–∞–Ω–∏–µ']}: {final} ({'+' if delta >= 0 else ''}{delta})")

        cmd = input("\n[1] –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è\n[2] –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ\n[0] –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ").strip()

        if cmd == "1":
            for i in range(len(df)):
                df.at[i, "–û—Å—Ç–∞—Ç–æ–∫"] += diffs[i]
            save_materials(df)
            print("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª.")
            break
        elif cmd == "2":
            idx = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ")) - 1
            val = input("–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ")
            try:
                diffs[idx] = float(val)
            except:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥.")
        elif cmd == "0":
            print("‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
            return
        
def get_price_from_materials_file(material_name):
    df = load_materials()
    row = df[df["–ù–∞–∑–≤–∞–Ω–∏–µ"].str.strip() == material_name.strip()]
    if row.empty or pd.isna(row.iloc[0].get("–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ (‚ÇΩ/–µ–¥.)", None)):
        return 0
    return float(row.iloc[0]["–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ (‚ÇΩ/–µ–¥.)"])

def update_average_prices():
    purchases_path = "data/purchases.xlsx"

    try:
        materials_df = load_materials()
        purchases_df = pd.read_excel(purchases_path)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤: {e}")
        return

    purchases_df["–ú–∞—Ç–µ—Ä–∏–∞–ª"] = purchases_df["–ú–∞—Ç–µ—Ä–∏–∞–ª"].str.strip()
    materials_df["–ù–∞–∑–≤–∞–Ω–∏–µ"] = materials_df["–ù–∞–∑–≤–∞–Ω–∏–µ"].str.strip()

    avg_prices = []
    for material in materials_df["–ù–∞–∑–≤–∞–Ω–∏–µ"]:
        filtered = purchases_df[purchases_df["–ú–∞—Ç–µ—Ä–∏–∞–ª"] == material]
        if filtered.empty:
            avg_prices.append(None)
            continue

        recent = filtered.sort_values("–î–∞—Ç–∞", ascending=False).head(3)
        prices_per_unit = recent["–¶–µ–Ω–∞ (–∑–∞ —É–ø–∞–∫–æ–≤–∫—É)"] / recent["–ö–æ–ª-–≤–æ –≤ —É–ø–∞–∫–æ–≤–∫–µ"]
        avg_price = round(prices_per_unit.mean(), 2)
        avg_prices.append(avg_price)

    materials_df["–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ (‚ÇΩ/–µ–¥.)"] = avg_prices
    save_materials(materials_df)
    print("‚úÖ –°—Ä–µ–¥–Ω–∏–µ —Ü–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ materials.xlsx")

